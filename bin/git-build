#!/bin/sh

LOCATION=$(pwd)
REMOTE=${1:-origin}
BRANCH=$(git symbolic-ref -q HEAD)
BRANCH=${BRANCH##refs/heads/}

REPO_DIR=$(git rev-parse --show-toplevel 2>/dev/null)
REPO_NAME=${REPO_DIR##*/}
BUILD_DIR=${REPO_DIR}/../git-private-build/${REPO_NAME}

# Get command for build from Git config
# git config private-build.command "mvn install"
# git config --remove-section private-build
COMMAND=$(git config --get private-build.command)
: ${COMMAND:="mvn install"}

function exit_fail {
  echo "${1}"
  command -v growlnotify >/dev/null 2>&1 && growlnotify --image ${DOTFILES}/notify/fail.png "${REPO_NAME}" -m "${1}"
  exit 1
}
 
function exit_ok {
  echo "${1}"
  command -v notify-send >/dev/null 2>&1 && notify-send -t 3000 --icon=${DOTFILES}/notify/success.png "${REPO_NAME}" "${1}"
  exit 0
}

# Private clone
rm -Rf ${BUILD_DIR}
git clone -slb "${BRANCH}" ${REPO_DIR} ${BUILD_DIR}
cd ${BUILD_DIR}
git pull --rebase

# Private build
eval ${COMMAND}
if [ $? -ne 0 ]; then
  exit_fail "Unable to build!"
fi

# Update working directory
cd ${LOCATION} && git fetch ${REMOTE}
exit_ok "Yet another successful build!"
